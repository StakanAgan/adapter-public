version: "3.9"

services:
  celery:
    image: ${COMPOSE_PROJECT_NAME}_image
    command: bash -c "./start.celery.sh"
    restart: always
    depends_on:
      - redis
    env_file:
      - .env
    container_name: ${COMPOSE_PROJECT_NAME}_celery

  web:
    build:
      context: .
      dockerfile: Dockerfile.local
      args:
        CI_JOB_TOKEN: ${CI_JOB_TOKEN}
    image: ${COMPOSE_PROJECT_NAME}_image
    command: bash -c "./start.sh"
    restart: always
    depends_on:
      - redis
    env_file:
      - .env
    ports:
      - 8000:8080
    container_name: ${COMPOSE_PROJECT_NAME}_web

  redis:
    image: "redislabs/rejson"
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    volumes:
      - ./volumes/redis:/data
      - ./deploy/configs/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redisearch.so:/usr/lib/redis/modules/redisearch.so
    container_name: ${COMPOSE_PROJECT_NAME}_redis

  db:
    image: "postgres:16"
    env_file:
      - .env
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
